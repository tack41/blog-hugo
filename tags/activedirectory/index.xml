<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>activedirectory on tack41&#39;s blog</title>
    <link>https://blog.tack41.net/tags/activedirectory/</link>
    <description>Recent content in activedirectory on tack41&#39;s blog</description>
    <image>
      <url>https://blog.tack41.net/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://blog.tack41.net/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 23 Mar 2022 00:00:00 +0900</lastBuildDate><atom:link href="https://blog.tack41.net/tags/activedirectory/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Active Directoryでログイン時にPowershell経由でexeを実行</title>
      <link>https://blog.tack41.net/posts/2022/03/23_01/</link>
      <pubDate>Wed, 23 Mar 2022 00:00:00 +0900</pubDate>
      
      <guid>https://blog.tack41.net/posts/2022/03/23_01/</guid>
      <description>TL;DR  Active Directoryでログイン時にexeファイルを実行する場合はStart-Processでの実行が必要  経緯 Emotetが流行っているので、EmocheckをActive Directory のログインスクリプトに仕込んでみていた。
単体では実行できるので問題ないと考えていたが、どうもActive Directory のグループポリシーでログイン時に起動する設定をすると何故か実行されない。イベントログを見ると一応対象として認識されているのだが&amp;hellip;
Powershell から外部ファイルを実行するにはいくつか方法があるが、以下のように実行するとダメなようだった。
$proc = New-Object &amp;#34;System.Diagnostics.Process&amp;#34; $psi = New-Object &amp;#34;System.Diagnostics.ProcessStartInfo&amp;#34; $psi.FileName = $emocheck_Exe $psi.Arguments = &amp;#34;-output $reportDir -quiet -json&amp;#34; $psi.CreateNoWindow = $true; $psi.UseShellExecute = $false $psi.WindowStyle = [System.Diagnostics.ProcessWindowStyle]::Hidden  $proc.StartInfo = $psi $proc.Start() 以下のように設定することでログイン時に実行されるようになった。
Start-Process -WindowStyle Hidden -FilePath $emocheck_Exe -ArgumentList &amp;#34;-output $reportDir -quiet -json&amp;#34; -WorkingDirectory $currentDir </description>
    </item>
    
    <item>
      <title>PowershellでActiveDirectory情報取得で原因不明の不具合</title>
      <link>https://blog.tack41.net/posts/2020/10/09_01/</link>
      <pubDate>Fri, 09 Oct 2020 00:00:00 +0900</pubDate>
      
      <guid>https://blog.tack41.net/posts/2020/10/09_01/</guid>
      <description>Active Directoryの情報をPowershellで取得し、管理資料に起こすスクリプトを作成。せっかくなので定期的にスクリプトを実行して差分がないかタスクスケジューラで定期実行してチェックする運用を構築していた時に問題が発生。
手動で実行する分には問題ないのだが、タスクスケジューラを通して実行するとなぜか以下問題が発生
 ADのオブジェクトのSort-Objectでの並び替えが効かない Get-GPOReportで出力した一部XMLに差分が検知される。実際に比較してみると差分はないのだが&amp;hellip;  https://social.technet.microsoft.com/Forums/ja-JP/a7e363fa-4553-4468-b123-a1e971c68a78/12525124641245812501123751239012356124271251812540124701254012?forum=powershellja
によると、手動実行とタスクスケジューラからの実行時で既定のモジュールパスが異なるということなので、それによるのかもしれない。が、プログラムがこけているわけではないので、原因はどれなのか得的できず、どれをロードすればよいのかわからない。
実行の都度生成されるファイルが変わってしまうようではチェックには使えないということで、タスクスケジューラによるチェックは断念した。
Powershellをタスクスケジューラから呼び出す処理はほかに多数書いており、問題になったことはない。Active Directoryを操作する際にはImport-Moduleで専用のモジュールを読み込んで処理をするのだが、こういった書き方をする場合に問題となるのかもしれない。 原因は不明。</description>
    </item>
    
  </channel>
</rss>
