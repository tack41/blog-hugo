<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>mysql on tack41&#39;s blog</title>
    <link>https://blog.tack41.net/tags/mysql/</link>
    <description>Recent content in mysql on tack41&#39;s blog</description>
    <image>
      <url>https://blog.tack41.net/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://blog.tack41.net/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 27 Sep 2022 15:48:00 +0900</lastBuildDate><atom:link href="https://blog.tack41.net/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ansible Moleculeでテスト</title>
      <link>https://blog.tack41.net/posts/2022/09/27_03/</link>
      <pubDate>Tue, 27 Sep 2022 15:48:00 +0900</pubDate>
      
      <guid>https://blog.tack41.net/posts/2022/09/27_03/</guid>
      <description>TL;DR Ansible Moleculeでのテストの実装はコツがいる 経緯 Ansible MoleculeでAnsibleのroleをテストしたが、結構コツがいるようだったので、メモ。
まず、現時点(2022/9/27)で日本語で言及している記事自体が少ない。以下は参照にさせていただいた。
MoleculeでAnsibleのRoleをテストする - その１ Molecule 3を試す ポイントは以下。
以下の流れで行う(https://molecule.readthedocs.io/en/latest/getting-started.html#run-test-sequence-commands) molecule create (1.Dockerコンテナの生成、起動) molecule converge (2.対象ののロールの実行) molecule verify (3.テスト) molecule destroy molecule testで一連の動作をまとめて実行できるとの記載があるが、自分の環境ではverifyがされていないので利用していない 途中でコケたら、molecule loginでコンテナにログインして実際のコマンドを実行するなどして確認する 1.Dockerコンテナの生成、起動 molecule.ymlを設定する imageにてDockerコンテナのタグを指定する 例えばubuntu:22.04を指定した場合、python3がインストールされていないためにansibleの各種タスクが実行できずにコケる。また、sudoもインストールされていないため、該当のタスクがbecome: yesを指定しているとやはりコケる。対策としてcommandを指定する。 platforms: - name: instance image: ubuntu:22.04 command: - &amp;#34;apt update&amp;#34; - &amp;#34;apt install -y sudo python3&amp;#34; pre_build_image: true 2.対象ののロールの実行 converge.ymlを設定する&amp;hellip;が、通常初期値で問題ないはず。他のタスクも実行したい場合は修正が必要なのかも 3.テスト verify.ymlを設定する。 assertタグでうまくいけばTrueとなるよう設定する。ファイルの存在をチェックする場合は以下のような感じ - name: Register if file exists stat: path: &amp;#34;/path/to/file&amp;#34; register: path_to_file - name: Check if file exists ansible.</description>
    </item>
    
    <item>
      <title>MariaDB(MySQL)の設定ファイルは.cnf</title>
      <link>https://blog.tack41.net/posts/2022/09/27_02/</link>
      <pubDate>Tue, 27 Sep 2022 12:33:00 +0900</pubDate>
      
      <guid>https://blog.tack41.net/posts/2022/09/27_02/</guid>
      <description>TL;DR MySQL(MariaDB)の設定ファイルの拡張子は.cnf .confではだめ。includedirでもだめ。 経緯 サーバに直接インストールしていたZabbixを、Raspberry Pi4上のDockerコンテナに移行しました。以前x64上のDockerコンテナで稼働していたことがあるので構築はかんたんに済み、移行もOK。が、併せてZabbixのメジャーバージョンアップを行うとupgrade処理の途中でコケる。日本語を含むデータの変換で失敗している。
show variable like &#39;%char%&#39;を実行すると、system,clinentがlatinになってる&amp;hellip; 設定ファイルにはutf8mb4を設定しているのになぜか反映されない。
設定ファイルconf/custom.confを/etc/mysql/conf.dにマウントしていたのだが、VScodede拡張子を.cnfに変えるとVScode上でファイルの認識が変わり、コンテナを再起動すると文字コードが正しく認識された。
公式サイトを見ればわかる話ではあるのですが、htmlファイルを.html,.htmのどちらでも認識するのと同じ感覚で&amp;hellip;また、includedirに指定されたフォルダにおいていたので、読んでくれるだろうと思いこんでました。
この設定ファイルは以前Dockerコンテナで運用していた際に使用していたものでしたが、当時からバージョンアップがうまく行かない問題があり、これが原因だった可能性があります。
ちゃんと公式サイトを見ましょうというお話でした。</description>
    </item>
    
    <item>
      <title>アルファメールプレミアでDBバックアップ</title>
      <link>https://blog.tack41.net/posts/2022/03/26_01/</link>
      <pubDate>Sat, 26 Mar 2022 00:00:00 +0900</pubDate>
      
      <guid>https://blog.tack41.net/posts/2022/03/26_01/</guid>
      <description>TL;DR アルファメール(プレミア)ではshellの直接実行はできない。が、phpのexecを利用すればほぼ同じことができます。 経緯 自社のWEBサイトを大塚商会のアルファメールプレミアでMovable Typeを利用して運用しています。バックアップに関して、コンテンツファイルはFTP(over TLS)でCLIで取得できますが、DBに関してはphpMyAdminを利用してブラウザからボタンポチポチで取得していました。
WEBコンソールのメニューの中に「cron設定」という項目があるのに気づいて調べたところ、拡張子が「.cgi」または「.php」のファイルの一覧から選んで指定時刻に実行してくれるということのようでした。
こういうバッチ的な利用が可能なのであれば、execでOSコマンドも実行できるのでは、と思ってmysqldump叩いてみたところ実行できました。これはありがたいということで、AWS SDK for PHPのpackaged phar版をダウンロードしてS3へのアップロードまでできました。
注意事項として、認証情報をファイルから取得する場合、そのファイルを含むパスに認証をかけないと危険です。
定期的に実行したいというより、サイトを更新したときに実行できれば良いので、ブラウザで該当のphpファイルを直接呼び出しています。
phpMyAdminから手動でダウンロードしてS3にアップというのは地味に面倒なので、ブラウザ呼び出し一発でできるようになって工数削減できました。</description>
    </item>
    
    <item>
      <title>MariaDBのON UPDATE CURRENT_TIMESTAMPに対するUPDATEの動作について</title>
      <link>https://blog.tack41.net/posts/2018/11/13_01/</link>
      <pubDate>Tue, 13 Nov 2018 00:00:00 +0900</pubDate>
      
      <guid>https://blog.tack41.net/posts/2018/11/13_01/</guid>
      <description>リンク先同様、しばらく悩んでしまったのでメモ。
MySQLでON UPDATE CURRENT_TIMESTAMP で更新時にタイムスタンプを自動更新するように設定している場合でも、UPDATE前後で値に変化がなければタイムスタンプは更新されない。
[https://qiita.com/nao_tuboyaki/items/bef44862f6ddffd4f0b5][https://qiita.com/nao_tuboyaki/items/bef44862f6ddffd4f0b5)</description>
    </item>
    
    <item>
      <title>テーブル定義の移行でよく使う方法</title>
      <link>https://blog.tack41.net/posts/2017/11/30_01/</link>
      <pubDate>Thu, 30 Nov 2017 10:51:34 +0000</pubDate>
      
      <guid>https://blog.tack41.net/posts/2017/11/30_01/</guid>
      <description>社内DBを試行錯誤しているため、DB間データ移行の前段としてテーブル定義をコピーしたいことがある。 大抵のDBでは無料でもツールが充実しており、ODBCライブラリを入れればよっぽど問題ないと思うのだが&amp;hellip;
MySQL &amp;hellip; Workbench Oracle &amp;hellip; SQL Developer SQL Server &amp;hellip; SQL Server Management Studio(SSMS) Windows 10 Pro 64bitで、SSMSからOracleにアクセスしようとしたところ、どうにもエラーでうまく行かない。64bitのInstant Client + ODBCをインストールし、OSのODBC管理ツールでテスト接続は成功しているのだが&amp;hellip;
で、こういう時はAccessでODBC経由でリンクを貼る分にはまず失敗しない。この状態でテーブルをAccessにテーブル定義のみコピーし、そのAccessのテーブルをSSMSでインポートするとうまくいく。</description>
    </item>
    
    <item>
      <title>Dockerでstorageにoverlayを使う際の注意事項(2016/2時点,CentOS7)</title>
      <link>https://blog.tack41.net/posts/2016/02/09_02/</link>
      <pubDate>Tue, 09 Feb 2016 02:00:00 +0900</pubDate>
      
      <guid>https://blog.tack41.net/posts/2016/02/09_02/</guid>
      <description>Dockerでstorage driverにoverlayを使ってはまったこと。
2016/2時点 CentOS7でのdocker(1.8.2)においては、コンテナのファイルが2GBを超えると、読み込めなくなるようだ。
mariadbにて、dumpファイルの取り込みまでは問題ないのだが、これを一旦停止し、再度立ち上げようとすると「27: File too large」というメッセージが出て起動できない。 ググってみたところ、どうもこのメッセージはMariaDBというよりもOSが出しているようだ。そのことに気づいてoverlayをdevicemapperに戻したところ、現象は発生しなくなった。
開発者サイドでも、まだoverlayは何が起こるかわからない、というスタンスらしいので、要注意。</description>
    </item>
    
    <item>
      <title>Dockerでのmysql利用時の注意</title>
      <link>https://blog.tack41.net/posts/2016/02/09_01/</link>
      <pubDate>Tue, 09 Feb 2016 01:00:00 +0900</pubDate>
      
      <guid>https://blog.tack41.net/posts/2016/02/09_01/</guid>
      <description>Dockerでmysqlを利用する際にはまったこと。
Dockerfile等で初期データを流し込みたい場合、mysqld_safeを「バックグラウンド」で起動しておいてmysqlコマンドで流しこみを行うのだが、
nohup mysqld_safe &amp;amp; mysql -u root &amp;lt; init.sql のように実行してしまうと、 mysqlサーバが起動する前にコマンドが帰ってきてしまうため2行目で「mysql.sockがない」という旨のエラーが返ってきてしまう。
このような場合、1行目の後に以下のようなループを噛ませるとうまく行くはず。(bashの場合)
nohup mysqld_safe &amp;amp; for {1..10}; do if [ -e /var/lib/mysql/mysql.sock ]; then break fi sleep 1 done </description>
    </item>
    
  </channel>
</rss>
