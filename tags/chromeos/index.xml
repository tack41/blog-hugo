<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>chromeos on tack41&#39;s blog</title>
    <link>https://blog.tack41.net/tags/chromeos/</link>
    <description>Recent content in chromeos on tack41&#39;s blog</description>
    <image>
      <url>https://blog.tack41.net/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://blog.tack41.net/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 28 Apr 2022 00:00:00 +0900</lastBuildDate><atom:link href="https://blog.tack41.net/tags/chromeos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ChromeOSのclipboardの履歴はcrostiniで使えない</title>
      <link>https://blog.tack41.net/posts/2022/04/28_01/</link>
      <pubDate>Thu, 28 Apr 2022 00:00:00 +0900</pubDate>
      
      <guid>https://blog.tack41.net/posts/2022/04/28_01/</guid>
      <description>ChromeOSでは、 [search + v] というショートカットで過去にclipboardにコピーされた内容を5件まで表示し、選択してペーストできる機能があります。が、これ、crostini環境のterminalやvscodeには貼り付けられません。一覧表示まではできるのですが、選択しても貼り付けられないのです。
通常の[ctrl + v]で直近の内容のペーストはできるので、同じ対応が上記コピー履歴からの貼り付けまでは対応していないようです。残念です。</description>
    </item>
    
    <item>
      <title>C#におけるIEnumerable,IEnumerator</title>
      <link>https://blog.tack41.net/posts/2019/01/16_01/</link>
      <pubDate>Wed, 16 Jan 2019 00:00:00 +0900</pubDate>
      
      <guid>https://blog.tack41.net/posts/2019/01/16_01/</guid>
      <description>IEnumerable(IEnumerator)はIListに比べると制約が多く、同じことをやろうとしても面倒、その分汎用性が高い、くらいに思ってました。
実際には、IEnumerableには要素の編集が一切できないのが最も大きな違いだと思います。
[https://stackoverflow.com/questions/1210295/how-can-i-add-an-item-to-a-ienumerablet-collection:embed:cite]
System.Linqを参照に追加すればIEnumerable.Appendが利用できますが、これはIList.Addとは違い非破壊的メソッドで自身は変更せずに要素を追加した新しいオブジェクトへの参照を返すだけです。 逆に言うと、一度設定したら編集しないCollectionを利用する場合はIEnumerableとして公開すればそとから編集されないことを保証できます。</description>
    </item>
    
  </channel>
</rss>
