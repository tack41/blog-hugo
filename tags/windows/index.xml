<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>windows on tack41&#39;s blog</title>
    <link>https://blog.tack41.net/tags/windows/</link>
    <description>Recent content in windows on tack41&#39;s blog</description>
    <image>
      <url>https://blog.tack41.net/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://blog.tack41.net/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 25 Nov 2021 00:00:00 +0900</lastBuildDate><atom:link href="https://blog.tack41.net/tags/windows/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AD環境のWindowsをAnsibleで操作する(非AD環境)</title>
      <link>https://blog.tack41.net/posts/2021/11/25_01/</link>
      <pubDate>Thu, 25 Nov 2021 00:00:00 +0900</pubDate>
      
      <guid>https://blog.tack41.net/posts/2021/11/25_01/</guid>
      <description>TL;DR Active Directryに参加していないWindow10をWSL2のUbuntu20.04にインストールしたAnsibleで操作する環境を構築しました。kerberos認証が必要ない分、AD参加済みの環境よりは簡単な手順でした。
手順 Windows 10 WSL2を有効にし、Ubuntu20.04をインストール
リモート接続を受け付けるための設定(要管理者権限)
Invoke-WebRequest -Uri https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1 -OutFile ConfigureRemotingForAnsible.ps1 powershell -ExecutionPolicy RemoteSigned .\ConfigureRemotingForAnsible.ps1 Ubuntu20.04 最新のAnsibleをインストール
sudo apt update sudo apt install software-properties-common sudo apt-add-repository --yes --update ppa:ansible/ansible sudo apt install ansible https://docs.ansible.com/ansible/2.9_ja/installation_guide/intro_installation.html#ubuntu-ansible 以下のaptパッケージのインストール
python3-pip gcc pip3で以下のPythonライブラリをインストール
pywinrm inventory.ymlに以下の記述を記載
windows: hosts: 192.168.yy.yyy: ansible_connection: winrm ansible_user: user_name ansible_winrm_server_cert_validation: ignore ansible_winrm_transport: basic ansible_port: 5986 ansible -i inventory.yml 192.168.yyy.yyy -m win_ping が成功することを確認</description>
    </item>
    
    <item>
      <title>AD環境のWindowsをAnsibleで操作する</title>
      <link>https://blog.tack41.net/posts/2021/11/24_01/</link>
      <pubDate>Wed, 24 Nov 2021 00:00:00 +0900</pubDate>
      
      <guid>https://blog.tack41.net/posts/2021/11/24_01/</guid>
      <description>TL;DR Active Directryに参加しているWindow10をWSL2のUbuntu20.04にインストールしたAnsibleで操作する環境を構築しました。複雑な手順が必要ですが、操作できることを確認しました。
手順 Windows 10 WSL2を有効にし、Ubuntu20.04をインストール
リモート接続を受け付けるための設定(要管理者権限)
Invoke-WebRequest -Uri https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1 -OutFile ConfigureRemotingForAnsible.ps1 powershell -ExecutionPolicy RemoteSigned .\ConfigureRemotingForAnsible.ps1 Ubuntu20.04 最新のAnsibleをインストール
sudo apt update sudo apt install software-properties-common sudo apt-add-repository --yes --update ppa:ansible/ansible sudo apt install ansible https://docs.ansible.com/ansible/2.9_ja/installation_guide/intro_installation.html#ubuntu-ansible 以下のaptパッケージのインストール
python3-pip gcc python-dev libkrb5-dev krb5-user pip3で以下のPythonライブラリをインストール
pywinrm[kerberos] kerberos requests_kerberos pykerberos 以下の内容で/etc/krb5.confを修正
[libdefaults] default_realm = EXAMPLE.COM kdc_timesync = 1 ccache_type = 4 forwardable = true proxiable = true [realms] EXAMPLE.COM = { kdc = dc1.</description>
    </item>
    
    <item>
      <title>Hyper-Vでホストとゲストが通信できない</title>
      <link>https://blog.tack41.net/posts/2021/11/10_01/</link>
      <pubDate>Wed, 10 Nov 2021 00:00:00 +0900</pubDate>
      
      <guid>https://blog.tack41.net/posts/2021/11/10_01/</guid>
      <description>TL;DR Hyper-Vでホストとゲストが通信できない場合、まず、Windowsの仮想NICができているか確認したほうが良いかも。
経緯 Hyper-Vでホストとゲストがどうしても通信できないということがありました。久々に利用したPCだったので設定がおかしくなってしまったのかも。
例えば外部スイッチにつないでホスト、ゲストともにゲートウェイまでは通信できるけどお互いへの通信ができない。別のPCからゲストへの通信はできる。 内部スイッチにつないでもだめ。
基本に立ち返ろうと、村嶋 修一氏のHyper-Vネットワークの基本を見たところ、外部ネットワークでホストと共有設定した場合、および内部ネットワークを作成した場合にホストに作成されるはずの仮想NICが無いことに気付きました。
http://www.vwnet.jp/windows/WS12R2/Hyper-V/Hyper-V_Network.htm
いったんスイッチを再作成しようと思い、内部ネットワークのスイッチを削除。 が、外部ネットワークのスイッチはエラーで削除できない。 これは内部的におかしくなっていると判断。いったんHyper-Vをアンインストール。 が、仮想NICが1つだけ残ってしまい、コントロールパネルのネットワーク接続からは削除できない(グレーアウトされている)ためデバイスマネージャーからアンインストール。 その後、再起動を経て再度Hyper-Vをインストールしたところ、外部/内部ネットワークのスイッチ作成時にホスト上に対応した仮想NIC(スイッチ名が「ExternalSwitch」であれば「vEthernet(ExternalSwitch)」というNIC)が作成されていることが確認できました。 ゲスト-ホスト間の通信も問題なし。
トラブルシューティングは、目先のエラーメッセージから安直に検索するのではなく、技術的な基礎に立ち返って原因を下から追いかけることが大事ということを改めて認識しました。</description>
    </item>
    
    <item>
      <title>Bootcampのセットアップは大変</title>
      <link>https://blog.tack41.net/posts/2021/10/04_01/</link>
      <pubDate>Mon, 04 Oct 2021 00:00:00 +0900</pubDate>
      
      <guid>https://blog.tack41.net/posts/2021/10/04_01/</guid>
      <description>TL;DR MacBook Air Mid 2013でbootcamp上でWindows 10を動かしてそれなりに動作させるのには、以下の作業が必要でした。
Windows 10 21H1のISOでBootcampをセットアップ コンピューターが予期せず再起動されたか...とエラーが表示されてセットアップが進まなくなるので、Shift+F10キーを押してコマンドプロンプトを起動し、regeditを起動してHKEY_LOCAL_MACHINE\SYSTEM\Setup\Status\ChildCompletionのsetup.exeの値を1から3に変更 この時点でNICが未認識 Mac側のBootcampアシスタントで[アクション]-[Windowsサポートソフトウェアをダウンロード]より一式ダウンロードしてUSBメモリに保存 Windows側でUSBメモリ内のSetup.exeを実行 この時点で英数、かなキーを認識できず日本語切り替えがうまくいかない デバイスマネージャーでApple Keyboardをアンインストール。ドライバーのソフトウェアも削除 この時点で英語キーボードと認識され、記号の入力がキーボードの印字通りにならない Windowsの[設定]-[時刻と言語]-[言語]の[優先する言語]にある「日本語」をクリックして[オプション]をクリック。ハードウェアキーボードレイアウトを「英語キーボード(101/102キー)」から「日本語キーボード(106/109キー)に変更 経緯 奥さんが利用しているMac Book Air(Mid 2013)が128GBで、容量不足で作業が滞るため、余っていた1TB SSDに交換しました。
が、このモデル、現時点ではサポート終了で最新バージョンにアップグレードできない&amp;hellip; 最新のMac買えばと薦めたのですが、最近ほとんど使わないので要らないとのこと。もったいないのでBootcampでWindows 10を入れて2025年までは延命させようと作業しました。
このモデルではHigh Sierraまでしかサポートされていません。この状態でBootcampアシスタントでWindows 10 21H1のISOを利用してBootcampを実行すると、途中ハードウェアの認識エラーにより先に進まなくなります。
https://asterisk-works.com/how-to-install-boot-camp-on-macbook-nvme-ssd/
を参考にレジストリ値を変更することでとりあえずエラーは回避。ですがこの状態だとドライバがまともに入っていないようで、NIC未認識によりアップデートもできない状態。
Mac側でBootcampアシスタントで[アクション]-[Windowsサポートソフトウェアをダウンロード]より一式ダウンロードしてWindowsで認識できるFATフォーマットのUSBメモリに保存。3GB弱ありました。で、Windows側でSetup.exeを実行し、再起動させてNICをはじめ各種HWは認識されました。
日本語変換がうまくいきません。IMEの設定で無変換キー、ひらがなキーにIME-OFF/ONの設定をしてもダメ。インストールされたキーボードドライバではキーの認識がうまくいっていないようでした。そこでデバイスマネージャーでApple Keyboradをアンインストール、ドライバーソフトウェアの削除のチェックボックスも入れて再起動すると、認識するようになりました。
https://i-tsunagu.com/mac/keyboard-notrecognize/
が、記号類の認識がおかしい。「@」を入力しようとするとShift+2を実行する必要がある状態。英語キーボードとして認識されているようなので、Windowsの[設定]-[時刻と言語]-[言語]の[優先する言語]にある「日本語」をクリックして[オプション]をクリック。ハードウェアキーボードレイアウトを「英語キーボード(101/102キー)」から「日本語キーボード(106/109キー)に変更してキーボードの印字通りに入力できるようになりました。
いろんなサイトを調べながら結構大変な作業でした。これは素人では無理。最新でないHigh Sierraで実行したこともあるのかもしれませんが、Bootcampアシスタントというお手軽そうなツールがあるからと気軽に手を出すと痛い目を見るな(自分含め)と思いました。</description>
    </item>
    
    <item>
      <title>Windowsの共有アクセス権にフルコントロールはダメ</title>
      <link>https://blog.tack41.net/posts/2021/08/30_01/</link>
      <pubDate>Mon, 30 Aug 2021 00:00:00 +0900</pubDate>
      
      <guid>https://blog.tack41.net/posts/2021/08/30_01/</guid>
      <description>TL;DR Windowsをファイルサーバ等の目的でフォルダを共有する際は、共有アクセス権を「フルコントロール」にはせず、「変更」+「読取」にする。
「フルコントロール」にすると、作成したファイル、フォルダに対して権限の変更が可能になってしまう。
経緯 Windowsをファイルサーバ等の目的でフォルダを共有する際、共有フォルダ権限とNTFS権限の2つがあり、どのように設定するか迷うことも多いです。
NTFS権限のほうが細かく設定できるため、共有アクセス権限は「フルコントロール」にしてNTFS権限で制限すればよいとしているサイトを多く見かけます。当社もそのように設定していました。
ですが、このように設定すると、利用者が作成したファイルやフォルダに対して利用者自身がアクセス権の変更を行うことができてしまいます。作成したファイル・フォルダの「所有者」は利用者が設定されてしまうためです。
対応としては、NTFS権限はそのままで共有アクセス権限を「変更」+「読み取り」に変更すればよいです。</description>
    </item>
    
    <item>
      <title>Windowsのシステムディスク入れ替え</title>
      <link>https://blog.tack41.net/posts/2021/08/21_02/</link>
      <pubDate>Sat, 21 Aug 2021 01:00:00 +0900</pubDate>
      
      <guid>https://blog.tack41.net/posts/2021/08/21_02/</guid>
      <description>TL;DR WindowsでHDDからSSD換装などでシステムディスクを入れ替える際は
コピー先のディスク容量(パーティションサイズではなく)がコピー元より大きい場合: Windows標準のイメージバックアップからシステム修復ディスクによる復旧でOK コピー先のディスク容量(パーティションサイズではなく)がコピー元より小さい場合: 素直に有償のクローンソフトを使おう 経緯 HDDで動作しているWindows 10をSSDに入れ替える作業を行いました。この手の作業でベストなのは、　HDDで必要なデータをバックアップしておき、　SSD側ではWindowsをクリーンインストールしてバックアップからデータを復旧、必要なプログラムは再度インストールしてもらうことです。
ですが、インストール済みのソフトを再インストールする手段がない、バックアップで必要な設定が復旧できるかわからない、等の理由でできないことがあります。今回もそうでした。
Windows 10にはイメージバックアップを取る機能がありますが、復旧時に同じサイズのパーティションを作成します。コピー先のディスクサイズがコピー元より大きければ問題ないのですが、そうでないと一筋縄では行きません。今回、以下の作業を行いましたが、問題を解消できませんでした。
Windowsで使用しているドライブ(今回はCドライブのみ)を「ディスクの管理」でサイズを縮小し、コピー先より小さいサイズにした ディスクの最後尾に設定されていた回復ドライブを削除し、縮小したCドライブのパーティション以降はすべて空き領域とした 回復ドライブを削除すると、イメージバックアップからの復旧に必要となるシステム修復ディスクが作成できなくなるうことがあるので、事前に作成しておく 一旦再起動し、イメージバックアップを取得、復旧を試みた。 有償ソフトの存在はもちろん知っていましたが、なんとかお金をかけずにといろいろ行い、ディスクの読み書きを伴う作業なのでとにかく時間がかかってしまいました。が、数千円の有償ソフト使ってあっという間に解消しました。
自分の作業の時間単価を冷静に考えないとだめですね。</description>
    </item>
    
    <item>
      <title>64bit OSでのレジストリ操作時の注意事項</title>
      <link>https://blog.tack41.net/posts/2018/07/30_03/</link>
      <pubDate>Mon, 30 Jul 2018 02:00:00 +0900</pubDate>
      
      <guid>https://blog.tack41.net/posts/2018/07/30_03/</guid>
      <description>http://tack41tu.hatenablog.com/entry/2018/07/30/214927
でClickOnceアプリをインストールする際にレジストリを編集する必要がある事を書いた。
レジストリエディタで編集するのは面倒だし運用も大変なので、レジストリを編集するアプリを作成した。
https://msdn.microsoft.com/en-us/library/ee308453.aspx
にある以下のコードを書いて実行し、正常終了するのだがレジストリエディタで確認すると変更が反映されておらず、ClickOnceの動作も変わらない。
Microsoft.Win32.RegistryKey key; key = Microsoft.Win32.Registry.LocalMachine.CreateSubKey(&amp;#34;SOFTWARE\\MICROSOFT\\.NETFramework\\Security\\TrustManager\\PromptingLevel&amp;#34;); key.SetValue(&amp;#34;LocalIntranet&amp;#34;, &amp;#34;Enabled&amp;#34;); key.Close(); どうもレジストリは32bit, 64bitで別の領域らしく、プログラム作成時にターゲットCPUをAnyとし、x86優先とした結果、32bitの領域を更新してしまっているらしい。
https://aonasuzutsuki.hatenablog.jp/entry/2015/12/08/173819
を参考に以下のように記載したところ、想定通りに動作するようになった。
Microsoft.Win32.RegistryKey key_base, key; key_base = RegistryKey.OpenBaseKey(RegistryHive.LocalMachine, RegistryView.Registry64); var key = prerKey.CreateSubKey(&amp;#34;SOFTWARE\\MICROSOFT\\.NETFramework\\Security\\TrustManager\\PromptingLevel&amp;#34;,); key.SetValue(&amp;#34;LocalIntranet&amp;#34;, &amp;#34;Enabled&amp;#34;); key.Close(); </description>
    </item>
    
    <item>
      <title>特定PCから特定サーバのみホスト名でUNCアクセスできない</title>
      <link>https://blog.tack41.net/posts/2018/03/12_01/</link>
      <pubDate>Mon, 12 Mar 2018 00:00:00 +0900</pubDate>
      
      <guid>https://blog.tack41.net/posts/2018/03/12_01/</guid>
      <description>社内情シスには常について回る、ファイルサーバーアクセスできない問題。 私も過去何度も経験しているし、WINS, SMBなどの知識もあるのでそんなに悩むことはここのところありませんでした。
しかし、今回は様子が異なり、以下のような症状。
\\SVRNAME でアクセスできない。 \\SVRNAME.domain.name のようなFQDNでもダメ 他のサーバに対しての\\SVRNAME2 のアクセスは可能。ダメなのは1台のサーバのみ(?) ping SVRNAME は通る(!?) \\IPアドレス であれば該当のサーバでもアクセスできる NetBIOS over TCP/IPは有効になっている %WINDIR%\system32\drivers\etc にあるhosts, lmhosts にエントリはない 上から見ていって、1,2番目まではよくあるNetBIOSの名前解決エラーかと思ったのだが、3,4番目あたりからどうも様子が違う&amp;hellip;
結果は、Windowsのコンパネ-[ユーザーアカウント]-[資格情報マネージャ]に、サーバー名で認証情報が登録されており、指定されたアカウントが無効となっていたため。 こんなところで指定しなくてもADログインすれば自動で認証するので、登録情報を削除したところアクセス可能となった。
Windows は奥が深い #いい意味ではない</description>
    </item>
    
    <item>
      <title>Windows 11 22H2以降の印刷設定ダイアログ</title>
      <link>https://blog.tack41.net/posts/2023/11/29_01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tack41.net/posts/2023/11/29_01/</guid>
      <description>TL;DR Windows 11 22H2より印刷設定ダイアログで「設定」ベースの「Win32アプリケーションから印刷しています」という画面が表示されるようになった。 レジストリの設定変更により旧ダイアログに戻せる 経緯 VisualStudio(C#)のプログラムでReportViewerを使っているところがあります。印刷時に以下の設定が必要で、プログラムからこれらを設定していました。
プリンター名 用紙設定 トレイ(手差しトレイを使用) 印刷設定画面を経由しますが、上記が設定済みのため何も変更せずに実行すれば正しく印刷されていました。
Windows 11にバージョンアップ後、印刷設定画面がWindowsの「設定」ベースのモダンな感じに変わってしまい、上記の設定が引き継がれなくなってしまいました。
色々調べたところ、レジストリを以下のように設定すればもとの印刷ダイアログに戻るということがわかり、実際確認できました。
ハイブ: HKEY_CURRENT_USER キーのパス: SOFTWARE\Microsoft\Print\UnifiedPrintDialog 値の名前: PreferLegacyPrintDialog 値の種類: REG_DWORD 値のデータ: 1 [参考] https://answers.microsoft.com/ja-jp/windows/forum/all/win-32/77e2e4de-9d07-4ee9-9967-3c3aa3d60ede
AD環境ですべての端末に反映したかったので、グループポリシーの[ユーザーの構成]-[基本設定]-[Windowsの設定]-[レジストリ]にて上記の項目を「更新」で登録し、全ユーザーに配布したところ、症状が解消されました。
配布対象にはWindows10の利用者もいましたが、問題なく利用できています。</description>
    </item>
    
  </channel>
</rss>
